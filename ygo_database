#!/bin/bash
usage() {
  echo "This script doesn't accept parameters"
  echo "Usage example: $0"
  exit 1
}

print_header() {
  clear
  print_separator
  echo "#####     Yu-Gi-Oh! Card Database     #####"
  print_separator
  echo "###  Creator: kuroi kenryu              ###"
  print_separator
}

print_option() {
  echo "## $1) $2"
}

print_separator() {
  echo "###########################################"
}

print_page_number() {
  echo "                 $1 / $2 "
}

main_menu() {
  print_header
  print_option 1 "Search Card"
  print_option 0 "Quit"
  print_separator
}

search_card_menu() {
  print_header
  print_option 1 "Filter by Name"
  print_option 2 "Filter by Type"
  print_option 3 "Filter by ID"
  print_option 4 "Filter by Level"
  print_option 5 "Filter by Attack"
  print_option 6 "Filter by Defense"
  print_option 7 "Filter by Attribute"
  print_option 0 "Back"
  print_separator
}

card_filter_name() {
  print_header
  echo "Enter the name of the card:"
}

filter_monsters_name() {
  if [ -e $monster_file ]; then
    echo $( grep -i "^.*;.*;$1;.*;.*;.*;.*;.*;.*;.*$" $monster_file )
  else
    echo "$monster_file doesn't exist" >&2
    echo ""
  fi
}

filter_magics_name() {
  if [ -e $magic_file ]; then
    echo $( grep -i "^.*;.*;$1;.*;.*;.*;.*;.*;.*;.*$" $magic_file )
  else
    echo "$magic_file doesn't exist" >&2
    echo ""
  fi
}

filter_traps_name() {
  if [ -e $trap_file ]; then
    echo $( grep -i "^.*;.*;$1;.*;.*;.*;.*;.*;.*;.*$" $trap_file )
  else
    echo "$trap_file doesn't exist" >&2
    echo ""
  fi
}

read_option() {
  echo -e "\nEnter option number: " >&2
  read option
  echo $option
}

card_filter_results() {
  local data=$1
  local results=$( echo "$data" | grep -o '\$' | wc -l )
  local current_page
  if [ $# != 2 ]; then
    current_page=1
  else
    current_page=$2
  fi
  local option=999
  while [ "$option" != "0" ]; do
    local page_result=$( echo "$data" | cut -f $current_page -d '$' )
    local card_id=$( echo "$page_result" | cut -f 1 -d ';' | xargs ) 
    local card_code=$( echo "$page_result" | cut -f 2 -d ';' ) 
    local card_name=$( echo "$page_result" | cut -f 3 -d ';' ) 
    local card_level=$( echo "$page_result" | cut -f 4 -d ';' ) 
    local card_attribute=$( echo "$page_result" | cut -f 5 -d ';' ) 
    local card_type=$( echo "$page_result" | cut -f 6 -d ';' ) 
    local card_description=$( echo "$page_result" | cut -f 7 -d ';' ) 
    local card_attack=$( echo "$page_result" | cut -f 8 -d ';' ) 
    local card_defense=$( echo "$page_result" | cut -f 9 -d ';' ) 
    local card_meta=$( echo "$page_result" | cut -f 10 -d ';' ) 
    local card_file=$data_dir$card_id"_"$card_code".png"

    print_header
    echo "## ID: $card_id"
    echo "## Code: $card_code"
    echo "## Card Type: $card_meta"
    echo "## Name: $card_name"
    echo "## Level: $card_level"
    echo "## Attribute: $card_attribute"
    echo "## Type: $card_type"
    echo "## Attack: $card_attack"
    echo "## Defense: $card_defense"
    printable_cd=$( echo "$card_description" | sed 's/\\n/\\n## /g' )
    echo -e "## Description: $printable_cd"
    echo "##"
    print_option 1 "Preview Card"
    if [ $current_page -lt $results ]; then
      print_option 2 "Next Card"
    fi
    if [ $current_page -gt 1 ]; then
      print_option 3 "Previous Card"
    fi
    print_option 0 "Back"
    print_separator
    print_page_number $current_page $results
    option=$( read_option )
    if [ "$option" == "1" ]; then
      xdg-open "$card_file"
    fi
    if [ "$option" == "2" ]; then
      current_page=$( echo "$current_page + 1 " | bc )
      card_filter_results "$data" $current_page
      option=0
    fi
    if [ "$option" == "3" ]; then
      current_page=$( echo "$current_page - 1 " | bc )
      card_filter_results "$data" $current_page
      option=0
    fi
  done
}

## Check correct command usage
if [ $# != 0 ]; then
  usage
fi

###################
##   Main Loop   ##
###################
data_dir="data/"
monster_data="monster_cards.dat"
magic_data="magic_cards.dat"
trap_data="trap_cards.dat"
monster_file=$data_dir$monster_data
magic_file=$data_dir$magic_data
trap_file=$data_dir$trap_data
option=999
## Main Menu
while [ "$option" != "0" ]; do
  main_menu
  option=$( read_option )
  s1_option=999
  if [ "$option" == "1" ]; then
    ## Submenu 1
    while [ "$s1_option" != "0" ]; do 
      search_card_menu
      s1_option=$( read_option )
      ## Submenu 2
      if [ "$s1_option" == 1 ]; then
	card_filter_name
	read card_name
	monster_matches=$( filter_monsters_name "$card_name" )
	magic_matches=$( filter_magics_name "$card_name" )
	trap_matches=$( filter_traps_name "$card_name" )
	total_matches=$monster_matches$magic_matches$trap_matches
	if [ "$total_matches" == "" ]; then
	  echo "No matches found for card $card_name"
	  echo "Press enter key to return to menu"
	  read enter_key
	else
	  card_filter_results "$total_matches"
	fi
      fi
    done
  fi
done
